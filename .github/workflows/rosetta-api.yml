name: Rosetta API release

on:
  workflow_dispatch:
    inputs:
      rosetta-api-release:
        description: 'Is this for a Rosetta-API release?'
        required: true
        default: false
        type: choice # use choice instead of boolean because the UI is not intuitive
        options:
        - true
        - false
  # test
  pull_request:

env:
  CI_COMMIT_SHA: ${{ github.sha }}
  CI_COMMIT_REF_PROTECTED: ${{ github.ref_protected }}
  CI_JOB_NAME: ${{ github.job }}
  CI_JOB_ID: ${{ github.job }} # github does not expose this variable https://github.com/orgs/community/discussions/8945
  CI_JOB_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
  CI_PIPELINE_SOURCE: ${{ github.event_name }}
  CI_PROJECT_DIR: ${{ github.workspace }}
  CI_MERGE_REQUEST_TARGET_BRANCH_NAME: ${{ github.event.pull_request.base.ref }}
  ROOT_PIPELINE_ID: ${{ github.run_id }}
  BAZEL_STARTUP_ARGS: "--output_base=/var/tmp/bazel-output/"
  RUSTFLAGS: "--remap-path-prefix=${CI_PROJECT_DIR}=/ic"
  AWS_SHARED_CREDENTIALS_CONTENT: ${{ secrets.AWS_SHARED_CREDENTIALS_FILE }}
  DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}
  DOCKER_HUB_PASSWORD_RO: ${{ secrets.DOCKER_HUB_PASSWORD_RO }}
  CI_MERGE_REQUEST_TITLE: ${{ github.event.pull_request.title }}
  BUILDEVENT_APIKEY: ${{ secrets.HONEYCOMB_API_TOKEN }}
  BUILDEVENT_DATASET: "github-ci-dfinity"
  PYTHONPATH: "${{ github.workspace }}/gitlab-ci/src:${{ github.workspace }}/gitlab-ci/src/dependencies"

jobs:
  bazel-build-rosetta-api:
    name: Bazel Build Rosetta API
    runs-on:
      group: dind-large
    container:
      image: ghcr.io/dfinity/ic-build@sha256:b7d870287df55b9972ed285fe1a9792cb81243523400d83d491f3ee149e8d47c
    timeout-minutes: 30
    if: ${{ vars.RUN_CI == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ github.event_name == 'pull_request' && 256 || 0 }}
      - name: Before script
        id: before-script
        shell: bash
        run: ./gitlab-ci/src/ci-scripts/before-script.sh
      - name: Run Bazel Test All
        id: bazel-test-all
        uses: ./.github/actions/bazel-test-all/
        with:
          BAZEL_COMMAND: "test"
          BAZEL_TARGETS: "//rs/rosetta-api/"
          BAZEL_CI_CONFIG: "--config=ci --repository_cache=/cache/bazel"
      - name: Upload bazel-targets
        uses: actions/upload-artifact@v4
        with:
          name: bazel-targets
          retention-days: 1
          if-no-files-found: error
          path: |
            bazel-targets

  rosetta-api-docker-image:
    name: Rosetta API Docker Image
    runs-on: ubuntu-latest
    needs: [bazel-build-rosetta-api]
    #   if: ${{ inputs.rosetta-api-release == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ github.event_name == 'pull_request' && 256 || 0 }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@a530e948adbeb357dbca95a7f8845d385edf4438 # v3
      - name: Login to GHCR
        uses: docker/login-action@5f4866a30a54f16a52d2ecb4a3898e9e424939cf # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build rosetta-api image
        shell: bash
        run: ./gitlab-ci/src/ci-scripts/rosetta-api-docker-image.sh